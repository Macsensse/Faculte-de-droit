name: Ajouter devoirs dans Google Calendar

# Déclenchement manuel
on:
  workflow_dispatch:

jobs:
  ajouter-devoirs:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Récupérer le dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Installer Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3️⃣ Installer les dépendances Google API
      - name: Install dependencies
        run: pip install google-api-python-client google-auth

      # 4️⃣ Ajouter les devoirs depuis 1.Agenda.md
      - name: Ajouter devoirs
        env:
          GC_CREDENTIALS: ${{ secrets.GC_CREDENTIALS }}
          GC_CALENDAR_ID: maxence.campagne@gmail.com  # Remplace par l'email de ton calendrier partagé
        run: |
          python - <<'EOF'
          import os
          import json
          import re
          from google.oauth2 import service_account
          from googleapiclient.discovery import build

          # Connexion à Google Calendar
          SCOPES = ["https://www.googleapis.com/auth/calendar"]
          creds_dict = json.loads(os.environ["GC_CREDENTIALS"])
          creds = service_account.Credentials.from_service_account_info(creds_dict, scopes=SCOPES)
          service = build("calendar", "v3", credentials=creds)

          calendar_id = os.environ["GC_CALENDAR_ID"]

          # Chemin du fichier agenda
          filename = "1.Agenda.md"
          try:
              with open(filename, "r", encoding="utf-8") as f:
                  agenda = f.read()
          except FileNotFoundError:
              print(f"⚠️ Fichier {filename} non trouvé !")
              exit(1)

          # Extraire les devoirs au format "YYYY-MM-DD - Titre"
          pattern = r"(\d{4}-\d{2}-\d{2}) - (.+)"
          matches = re.findall(pattern, agenda)

          if not matches:
              print("⚠️ Aucun devoir trouvé dans 1.Agenda.md")
              exit(0)

          for date_str, title in matches:
              # Vérifier si l'événement existe déjà
              events_result = service.events().list(
                  calendarId=calendar_id,
                  timeMin=f'{date_str}T00:00:00+02:00',
                  timeMax=f'{date_str}T23:59:59+02:00',
                  q=title
              ).execute()

              if events_result['items']:
                  print(f"⚠️ Devoir déjà présent : {date_str} - {title}")
                  continue

              # Créer l'événement sur toute la journée
              event = {
                  'summary': title,
                  'start': {'date': date_str, 'timeZone': 'Europe/Paris'},
                  'end': {'date': date_str, 'timeZone': 'Europe/Paris'},
              }

              service.events().insert(calendarId=calendar_id, body=event).execute()
              print(f"✅ Devoir ajouté : {date_str} - {title}")
          EOF

